a=1
discretize.groovy=import com.google.common.base.Strings\n\
import com.weibo.ba.evaluation.now.common.domain.Tag\n\
import com.weibo.ba.evaluation.now.common.domain.Tags\n\
import com.weibo.ba.evaluation.now.common.utils.JsonUtils\n\
import com.weibo.ba.evaluation.now.storm.utils.PinYinUtils\n\
\n\
class _Discretize {\n\
\n\
    private static final AGE_MAP = [\n\
            //左闭区间，右开区间，离散值\n\
            [0, 20, 20],\n\
            [20, 30, 30],\n\
            [30, 40, 40],\n\
            [40, 60, 60],\n\
            [60, -1, 100]\n\
    ];\n\
\n\
    private static final RATE_MAP = [\n\
            //左闭区间，右开区间，离散值\n\
            [0, 0.1, 0],\n\
            [0.1, 0.5, 1],\n\
            [0.5, 0.7, 2],\n\
            [0.7, -1, 3],\n\
    ];\n\
\n\
    private static Tags DEFAULT_ONE = null;\n\
\n\
    static {\n\
\n\
        List<Tag> tagsList = new ArrayList<>();\n\
        tagsList.add(Tag.of("loc", "-1"));\n\
        tagsList.add(Tag.of("age", "-1"));\n\
        tagsList.add(Tag.of("wl_rate", "-1"));\n\
        tagsList.add(Tag.of("frequency", "-1"));\n\
        tagsList.add(Tag.of("gender", "-1"));\n\
        DEFAULT_ONE = new Tags(tagsList);\n\
    }\n\
\n\
    public final Tags evaluate(String features) {\n\
        if (Strings.isNullOrEmpty(features)) {\n\
            return DEFAULT_ONE;\n\
        }\n\
        Map<String, String> featureMap = JsonUtils.fromJson(features, Map.class);\n\
        List<Tag> results = new ArrayList<>();\n\
        results.add(Tag.of("loc", PinYinUtils.toPinyin(featureMap.getOrDefault("loc", "-1"))));\n\
        results.add(Tag.of("age", this.discretize(AGE_MAP, featureMap.get("age"))));\n\
        results.add(Tag.of("wl_rate", this.discretize(RATE_MAP, featureMap.get("wl_rate"))));\n\
        results.add(Tag.of("frequency", String.valueOf(featureMap.getOrDefault("frequency", "-1"))));\n\
        results.add(Tag.of("gender", String.valueOf(featureMap.getOrDefault("gender", "-1"))));\n\
        return new Tags(results);\n\
    }\n\
\n\
    private String discretize(def ranges, def value) {\n\
        if (null == value) {\n\
            return "-1";\n\
        }\n\
        for (def range : ranges) {\n\
            if (Double.compare(value, range[0]) >= 0 || Double.compare(value, range[1]) || -1 == range[1]) {\n\
                return String.valueOf(range[2]);\n\
                break;\n\
            }\n\
        }\n\
        return "-1";\n\
    }\n\
}\n\
\n\
new _Discretize();\n\


split.groovy=class TrafficSplit {\n\
\n\
    String evaluate(String uid) {\n\
        if (uid.length() < 6) {\n\
            return "0";\n\
        } else {\n\
            char charAt4 = uid.charAt(4);\n\
            char charAt5 = uid.charAt(5);\n\
            if (charAt4.equals("2")) {\n\
                return "baseClean";\n\
            } else if (charAt4.equals("7")) {\n\
                return "dpPart1";\n\
            } else if (charAt4.equals("4") && "01234".contains(charAt5)) {\n\
                return "l3tag";\n\
            } else {\n\
                return "base";\n\
            }\n\
        }\n\
\n\
    }\n\
}\n\
\n\
new TrafficSplit();\n\
